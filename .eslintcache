[{"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/index.js":"1","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/App.js":"2","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/reportWebVitals.js":"3","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/navbar.component.js":"4","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/exercises-list.component.js":"5","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/edit-exercise.component.js":"6","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/create-exercise.component.js":"7","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/create-user.component.js":"8"},{"size":435,"mtime":1611178306295,"results":"9","hashOfConfig":"10"},{"size":875,"mtime":1611179203094,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610586548938,"results":"12","hashOfConfig":"10"},{"size":1023,"mtime":1611178163213,"results":"13","hashOfConfig":"10"},{"size":2120,"mtime":1611252132917,"results":"14","hashOfConfig":"10"},{"size":4204,"mtime":1611338699810,"results":"15","hashOfConfig":"10"},{"size":3758,"mtime":1611248226837,"results":"16","hashOfConfig":"10"},{"size":1927,"mtime":1611351358258,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4zspzl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/index.js",[],["36","37"],"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/App.js",[],"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/reportWebVitals.js",[],"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/navbar.component.js",[],"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/exercises-list.component.js",["38"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Exercise = props => (\n    <tr>\n        <td>{props.exercise.username}</td>\n        <td>{props.exercise.description}</td>\n        <td>{props.exercise.duration}</td>\n        <td>{props.exercise.date}</td>\n        <td>\n            <Link to={'/edit/'+props.exercise._id}>Edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>Delete</a>\n        </td>\n    </tr>\n)\n\nexport default class ExercisesList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.deleteExercise = this.deleteExercise.bind(this);\n\n        this.state = {exercises: []};\n\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:1000/exercises/')\n            .then(res => {\n                this.setState({ exercises: res.data })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    deleteExercise(id) {\n        axios.delete('http://localhost:1000/exercises/'+id)\n            .then(res => console.log(res.data));\n\n        this.setState({\n            exercises: this.state.exercises.filter(el => el._id !== id)\n        })\n    }\n\n    exerciseList() {\n        return this.state.exercises.map(currentExercise => {\n            return <Exercise exercise={currentExercise} deleteExercise={this.deleteExercise} key={currentExercise._id}/>\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Logged Exercises</h3>\n                <table className=\"table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Username</th>\n                            <th>Description</th>\n                            <th>Duration</th>\n                            <th>Date</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.exerciseList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/edit-exercise.component.js",[],"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/create-exercise.component.js",[],"/Users/all4ara/Desktop/React-Practice/mern-exercise-tracker/src/components/create-user.component.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":12,"column":66,"nodeType":"45","endLine":12,"endColumn":139},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]